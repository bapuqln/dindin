//
//  FDHomeViewController.swift
//  FoodDevlivery
//
//  Created ACE_xW on 19/10/2020.
//  Copyright Â© 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by ACE_xW
//

import UIKit
import SnapKit
import RxSwift
import RxCocoa

class FDHomeViewController: UIViewController, FDHomeViewProtocol {
	var presenter: FDHomePresenterProtocol?
    var menuTableViewAdapter: FDMenuTableViewAdapter?
    
    private let disposeBag = DisposeBag()

    @IBOutlet weak var scrollView: UIScrollView!
    @IBOutlet weak var bannerScrollView: UIScrollView!
    @IBOutlet weak var bannerPageControl: UIPageControl!
    @IBOutlet weak var menuView: UITableView!
    @IBOutlet weak var cartButton: UIButton!
    @IBOutlet weak var cartItem: UILabel!
    
    @IBAction func catBtnPressed(_ sender: Any) {
        self.presenter?.showCart()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupMenuTableView()

        self.view.backgroundColor = .red
        self.presenter?.onViewDidLoad()
        presenter?.itemsCount.asObservable().bind(to: self.cartItem.rx.text).disposed(by: disposeBag)
    }
}

extension FDHomeViewController {
    func setupMenuTableView() {
        self.menuTableViewAdapter = FDMenuTableViewAdapter(tableView: self.menuView)
        self.menuTableViewAdapter?.bind(self.presenter).operation({ [weak self] (operate) in
            switch operate {
            case .contentSizeChange:
                self?.menuTableViewContentSizeChanged()
            case .add:
                self?.cartButton.setImage(UIImage(named: ""), for: .normal)
            }
        })
    }
    
    func showBanners(_ entity: FDBannerResponseEntity) {
        var offset: CGFloat = 0
        entity.banner?.enumerated().forEach({ (banner) in
             let imageView = UIImageView()
            imageView.contentMode = .scaleToFill
            imageView.backgroundColor = .white
            imageView.fd_imageFrom(banner.element)
            self.bannerScrollView.addSubview(imageView)
            imageView.snp.makeConstraints {
                $0.left.right.equalTo(self.view)
                $0.height.equalTo(self.bannerScrollView.bounds.height)
            }
            offset += UIScreen.main.bounds.width
        })

        self.bannerScrollView.contentSize = CGSize(width: offset, height: self.bannerScrollView.bounds.height)
        self.bannerPageControl.numberOfPages = entity.banner?.count ?? 0
        self.bannerPageControl.currentPage = 0
    }
    
    func menuTableViewContentSizeChanged() {
        UIView.animate(withDuration: 0.1) {
            self.updateViewConstraints()
            self.loadViewIfNeeded()
        }
    }
}
